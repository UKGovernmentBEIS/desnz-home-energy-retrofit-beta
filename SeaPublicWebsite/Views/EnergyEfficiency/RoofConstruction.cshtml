@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SeaPublicWebsite.BusinessLogic.Models.Enums
@using SeaPublicWebsite.Controllers

@model SeaPublicWebsite.Models.EnergyEfficiency.RoofConstructionViewModel
@{
    ViewBag.Title = "Roof Construction";
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        Href = Model.BackLink,
    })
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <form action="@Url.Action(nameof(EnergyEfficiencyController.RoofConstruction_Post), "EnergyEfficiency", new {reference = Model.Reference})" method="post" novalidate>
            @Html.AntiForgeryToken()
            @(Html.HiddenFor(m => m.EntryPoint))
            
            @{
                Func<object, object> details = 
                    @<text>
                        <p class="govuk-body">
                            Most roofs are pitched, meaning they are built at an angle or with a slope.<br>
                        </p>
                        <p class="govuk-body">
                            A flat roof is completely, or almost, level, with no obvious slope or angle.
                        </p>
                     </text>;
                
                Func<object, object> blueBannerHint = null;
                if (Model.Epc?.RoofConstruction is not null)
                {
                    blueBannerHint = 
                        @<p class="govuk-body">
                            Your @Model.Epc.LodgementYear Energy Performance Certificate suggests you have a
                            <strong>
                                @(Model.Epc?.RoofConstruction switch {
                                    RoofConstruction.Flat => "flat",
                                    RoofConstruction.Mixed => "mixed flat and pitched",
                                    RoofConstruction.Pitched => "pitched",
                                    _ => throw new ArgumentOutOfRangeException()})
                            </strong>
                            roof.
                        </p>;
                }
            }
            
            @(await Html.GovUkRadiosFor(m => m.RoofConstruction,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Is any part of your roof flat?",
                        Classes = "govuk-fieldset__legend--l",
                        IsPageHeading = true
                    }
                },
                new HintViewModel
                {
                    Html = @<text>
                               @await Html.GovUkDetails(new DetailsViewModel
                               {
                                   SummaryText = "Help me answer this question",
                                   Html = details
                               })
                               
                               @if (blueBannerHint is not null)
                               {
                                   @await Html.GovUkInsetText(new InsetTextViewModel
                                   {
                                       Classes = "sea-epc-hint",
                                       Html = blueBannerHint
                                   })
                               }
                            </text>
                }
            ))

            @await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Continue"
            })
            
        </form>
        
    </div>
</div>
